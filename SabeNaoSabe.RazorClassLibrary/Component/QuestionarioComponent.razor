@using SabeNaoSabe.RazorClassLibrary.Services
@using SabeNaoSabe.RazorClassLibrary.Data
@using SabeNaoSabe.RazorClassLibrary.Component
@using SabeNaoSabe.RazorClassLibrary.ViewModel

<AddButton Visible="@showAddButton" CreateUpdateQuestionarioClicked="QuestionarioCreateUpdate" ></AddButton>

<QuestionarioTable Visible="@showQuestionarioTable" qList="questionariosList" EditClicked="EditQuestionario" DeleteClicked="DeleteQuestionario" />

<QuestionarioCreateUpdate Visible="@showQuestionarioCreateUpdate" QuestionarioModel="@QuestionarioModel" 
    SaveClicked="SavedClicked" CancelClicked="CanceledClicked" title="@strTitle"/>
<Confirm Visible="@showConfirm" DeleteQuestionarioClicked="DeleteQuestionarioConfirm" CancelQuestionarioClicked="CancelQuestionarioConfirm"/>

@code {
    private bool showAddButton = true;
    private bool showQuestionarioTable = true;
    private bool showQuestionarioCreateUpdate = false;
    private bool showConfirm = false;
    private string strTitle;
    private int Id;

    private List<Questionario> questionariosList = new List<Questionario>();
    public QuestionarioViewModel QuestionarioModel = new QuestionarioViewModel();


    [Inject]
    private IQuestionarioService questionarioService { get; set; }

    protected override void OnInitialized()
    {
        LoadQuestionario();
    }
    private async void LoadQuestionario()
    {
        questionariosList = await questionarioService.GetAllAsync();
    }

    private void QuestionarioCreateUpdate()
    {
        strTitle = "Create";
        showAddButton = false;
        showQuestionarioTable = false;
        showQuestionarioCreateUpdate = true;

    }
    private async void SavedClicked()
    {
        if(QuestionarioModel.Id > 0)
        {
            await questionarioService.EditQuestionario(QuestionarioModel);
        }
        else
        {
            await questionarioService.AddQuestionario(QuestionarioModel);
        }

        showAddButton = true;
        showQuestionarioTable = true;
        showQuestionarioCreateUpdate = false;
    }
    private async void CanceledClicked()
    {
        showAddButton = true;
        showQuestionarioTable = true;
        showQuestionarioCreateUpdate = false;
    }
    private async  void EditQuestionario(int id)
    {
        strTitle = "Edit";
        var quest = await questionarioService.GetByIdAsync(id);
        showAddButton = false;
        showQuestionarioTable = false;
        showQuestionarioCreateUpdate = true;
        QuestionarioModel.Description = quest.Description;
        QuestionarioModel.Name = quest.Name;
        QuestionarioModel.Id = quest.Id;
    }
    private async void DeleteQuestionario(int id)
    {
        showConfirm = true;
        Id = id;
        // showAddButton = false;
        // showQuestionarioTable = false;
        // showQuestionarioCreateUpdate = true;
    }
    private async void DeleteQuestionarioConfirm()
    {
        showConfirm = false;
        await questionarioService.DeleteQuestionario(Id);
    }
    private async void CancelQuestionarioConfirm()
    {
        showConfirm = false;
    }
}
