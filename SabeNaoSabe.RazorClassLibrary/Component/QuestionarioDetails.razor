@using Microsoft.AspNetCore.Components.Forms
@using SabeNaoSabe.RazorClassLibrary.Models

@if (Visible)
{
    <div>
        <label><b>Name:</b> @QuestionarioModel.Name</label>
    </div>
    <div>
        <label><b>Description:</b> @QuestionarioModel.Description</label>
    </div>
    <EditForm Model="corpoList" OnSubmit="RespostaQuestionario"> 
        
@*         <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary />
 *@        
        @foreach (var corpo in corpoList)
        {
            <label><b>Pergunta @corpo.Id:</b>@corpo.Pergunta</label>
            <br />
            @if (corpo.Tipo == 1)
            {
                // opcao radio, não funcionou o inputradiogroup, apelei.
                @foreach(var opcao in corpo.Opcoes)
                {
                    <input type="radio" Value="@opcao.Checked" name="@corpo.Id.ToString()" id="@opcao.Id" @onchange="@(()=>corpo.Resposta=opcao.Id)"/>
                    <label for="@opcao.Id">@opcao.Descricao</label>
                    <br />
                }
                @if (exp)
                {
                    <br />
                    <p><b>Resultado:</b> @corpo.Resultado</p>
                    <p><b>Explicação:</b> @corpo.Explicacao</p>
                }
            }
            else
            {
                // ocpcao checkbox
                @foreach (var opcao in corpo.Opcoes)
                {
                    <InputCheckbox id="opcaoCheck" @bind-Value="opcao.Checked" class="form-control-input" />
                    <span style="padding-left: 5px">@opcao.Descricao</span>
                    <br />
                }
                @if (exp)
                {
                    <br />
                    <p><b>Resultado:</b> @corpo.Resultado</p>
                    <p><b>Explicação:</b> @corpo.Explicacao</p>
                }
            }
        }
        <button type="submit" class="btn btn-primary m-md-1">Corrige</button>
        <button class="btn btn-primary m-md-1" @onclick="CancelQuestionario">Cancel</button>
        <button class="btn btn-primary m-md-1" @onclick="BackQuestionario">Back</button>
    </EditForm>
}
@code {
    [Parameter]
    public bool Visible { get; set; }
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public EventCallback BackClicked { get; set; }
    [Parameter]
    public QuestionarioModel QuestionarioModel { get; set; } 
    [Parameter]
    public List<Corpo> corpoList { get; set; }
    [Parameter]
    public EventCallback SaveClicked { get; set; }
    [Parameter]
    public EventCallback CancelClicked { get; set; }
    public bool exp = false;

    private async Task RespostaQuestionario()
    {
        foreach(var corpo in corpoList)
        {
            if(corpo.Tipo == 1)
            {
                int gabarito = corpo.Gabaritos[0];
                if(corpo.Resposta == gabarito)
                {
                    corpo.Resultado = "Acertou";
                }
                else
                {
                    corpo.Resultado = "Errou";
                }
            }
            else
            {
                int total = 0;
                foreach(var gabarito in corpo.Gabaritos)
                {
                    foreach(var opcao in corpo.Opcoes)
                    {
                        if (opcao.Id == gabarito && opcao.Checked) total++;
                    }
                }
                if (total == corpo.Gabaritos.Count)
                {
                    corpo.Resultado = "Acertou";
                }
                else
                {
                    corpo.Resultado = "Errou";
                }
            }
        }

        exp = true;
        this.StateHasChanged();

        // if (Title == "Create") QuestionarioModel.Id = 0;
        // await SaveClicked.InvokeAsync(QuestionarioModel);
    }
    private async Task CancelQuestionario()
    {
        QuestionarioModel.Name = null;
        QuestionarioModel.Description = null;

        await CancelClicked.InvokeAsync(QuestionarioModel);
    }

    private void BackQuestionario()
    {
        exp = false;
        BackClicked.InvokeAsync();
    }
}
